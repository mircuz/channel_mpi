!USE rtchecks
#include <mpi.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>
#include "remap3d_wrap.h"

INTEGER rank
gamma=0
USE dnsdata
USE initialization
USE data_man
USE dnsdirect
USE convol_trasp

!// Timeloop
time=~+2/RK1_rai_coeff*deltat
convol_trasp(VV,V);		buildrhs(RK1_rai, VV, V);	linsolve(RK1_rai_coeff/deltat)	
vetaTOuvw;	computeflowrate(RK1_rai_coeff/deltat);	ytoz
FILE u_fromV;		u_fromV = OPEN("u_fromV.dat")

LOOP FOR iy=-1 TO ny-1
	LOOP FOR ix=0 TO nx
		LOOP FOR iz=-nz TO nz
WRITE TO u_fromV V(ix,iz,iy).u.REAL
WRITE TO u_fromV V(ix,iz,iy).u.IMAG
REPEAT 
REPEAT
REPEAT


!(IF rank=1 THEN WRITE "(0,0)   " V(0,0,*).u
IF rank=0 THEN WRITE "(1,-2)" V(1,-2,*).u
IF rank=1 THEN WRITE "(1,1)" V(1,1,*).u
IF rank=2 THEN WRITE "(3,-4)" V(3,-4,*).u !)

time=~+2/RK2_rai_coeff*deltat
convol_trasp(VV,V);		buildrhs(RK2_rai, VV, V);	linsolve(RK2_rai_coeff/deltat)
vetaTOuvw; computeflowrate(RK2_rai_coeff/deltat); 	ytoz
!(IF rank=1 THEN WRITE "(0,0)   " V(0,0,*).u
IF rank=0 THEN WRITE "(1,-2)" V(1,-2,*).u
IF rank=1 THEN WRITE "(1,1)" V(1,1,*).u
IF rank=2 THEN WRITE "(3,-4)" V(3,-4,*).u !)

!(time=~+2/RK3_rai_coeff*deltat
convol_trasp(VV,V);		buildrhs(RK3_rai, VV, V);	linsolve(RK3_rai_coeff/deltat)
vetaTOuvw; computeflowrate(RK3_rai_coeff/deltat);	ytoz
IF rank=1 THEN WRITE "(0,0)   " V(0,0,*).u
IF rank=0 THEN WRITE "(1,-2)" V(1,-2,*).u
IF rank=1 THEN WRITE "(1,1)" V(1,1,*).u
IF rank=2 THEN WRITE "(3,-4)" V(3,-4,*).u !)


!// Loop end

<* 	MPI_Barrier(MPI_COMM_WORLD);
	free(u_convol_);	free(v_convol_);	free(w_convol_);				//Worked uvw
	free(U_t_);		free(V_t_);		free(W_t_);								//Local UVW copied into structure
  	free(uu_);	free(uv_);	free(vv_);	free(vw_);	free(ww_);	free(uw_); 	//Local convols copied into structure
	free(recvbuf_);	 free(sendbuf_);  										//Remap local arrays
	MPI_Finalize();	*>

